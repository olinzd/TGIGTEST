// –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø FIREBASE - –í–ê–®–ò –î–ê–ù–ù–´–ï
const firebaseConfig = {
    apiKey: "AIzaSyDmoAORpz-NhWQskyW_p9IwCKrClC419LQ",
    authDomain: "testtgid.firebaseapp.com",
    projectId: "testtgid",
    storageBucket: "testtgid.firebasestorage.app",
    messagingSenderId: "262521008550",
    appId: "1:262521008550:web:640971c8590503dde95f67"
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Firebase
const app = firebase.initializeApp(firebaseConfig);
const db = firebase.firestore();
const auth = firebase.auth();

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram Web App
const tg = window.Telegram.WebApp;

// –≠–ª–µ–º–µ–Ω—Ç—ã DOM
const statusElement = document.getElementById('status');
const saveBtn = document.getElementById('saveBtn');
const refreshBtn = document.getElementById('refreshBtn');

// –§—É–Ω–∫—Ü–∏—è –∞–Ω–æ–Ω–∏–º–Ω–æ–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≤ Firebase
async function authenticateAnonymously() {
    try {
        console.log('–ù–∞—á–∏–Ω–∞–µ–º –∞–Ω–æ–Ω–∏–º–Ω—É—é –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é...');
        const userCredential = await auth.signInAnonymously();
        console.log('‚úÖ –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞. UID:', userCredential.user.uid);
        return userCredential.user;
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏:', error);
        throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é: ' + error.message);
    }
}

// –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Telegram
function getTelegramUserData() {
    try {
        const user = tg.initDataUnsafe.user;
        
        if (!user || !user.id) {
            throw new Error('–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Telegram –Ω–µ –¥–æ—Å—Ç—É–ø–Ω—ã');
        }

        return {
            tg_id: user.id,
            tg_username: user.username || '–Ω–µ —É–∫–∞–∑–∞–Ω',
            first_name: user.first_name || '',
            last_name: user.last_name || '',
            language_code: user.language_code || '',
            is_premium: user.is_premium || false,
            photo_url: user.photo_url || '',
            is_bot: user.is_bot || false,
            telegram_data: JSON.stringify(tg.initDataUnsafe),
            timestamp: firebase.firestore.FieldValue.serverTimestamp(),
            last_updated: new Date().toISOString()
        };
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö Telegram:', error);
        throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ' + error.message);
    }
}

// –§—É–Ω–∫—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ Firestore
async function saveUserData(userData) {
    try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é
        const currentUser = auth.currentUser;
        if (!currentUser) {
            throw new Error('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω');
        }

        // –î–æ–±–∞–≤–ª—è–µ–º UID –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∫ –¥–∞–Ω–Ω—ã–º
        const dataWithAuth = {
            ...userData,
            firebase_uid: currentUser.uid,
            auth_timestamp: new Date().toISOString(),
            app_version: '1.0.0'
        };

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ Firestore
        await db.collection('users').doc(userData.tg_id.toString()).set(dataWithAuth, { 
            merge: true 
        });
        
        console.log('‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ Firestore');
        return true;
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ Firestore:', error);
        throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ: ' + error.message);
    }
}

// –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
function updateUI(userData, firebaseUser) {
    statusElement.innerHTML = `
        <div class="status-success">
            <h3>‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!</h3>
            
            <div class="user-data-item">
                <span class="user-data-label">Telegram ID:</span>
                <span class="user-data-value">${userData.tg_id}</span>
            </div>
            
            <div class="user-data-item">
                <span class="user-data-label">Username:</span>
                <span class="user-data-value">@${userData.tg_username}</span>
            </div>
            
            <div class="user-data-item">
                <span class="user-data-label">–ò–º—è:</span>
                <span class="user-data-value">${userData.first_name} ${userData.last_name}</span>
            </div>
            
            <div class="user-data-item">
                <span class="user-data-label">Firebase UID:</span>
                <span class="user-data-value">${firebaseUser.uid}</span>
            </div>
            
            <div class="user-data-item">
                <span class="user-data-label">Premium:</span>
                <span class="user-data-value">${userData.is_premium ? '‚úÖ –î–∞' : '‚ùå –ù–µ—Ç'}</span>
            </div>
            
            <div class="user-data-item">
                <span class="user-data-label">–Ø–∑—ã–∫:</span>
                <span class="user-data-value">${userData.language_code || '–Ω–µ —É–∫–∞–∑–∞–Ω'}</span>
            </div>
            
            <div class="user-data-item">
                <span class="user-data-label">–í—Ä–µ–º—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:</span>
                <span class="user-data-value">${new Date().toLocaleString('ru-RU')}</span>
            </div>
        </div>
    `;
}

// –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫
function handleError(error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
    
    statusElement.innerHTML = `
        <div class="status-error">
            <h3>‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞</h3>
            <p>${error.message}</p>
            <p><small>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ</small></p>
            <button onclick="location.reload()" style="
                margin-top: 15px;
                padding: 10px 20px;
                background: #dc3545;
                color: white;
                border: none;
                border-radius: 8px;
                cursor: pointer;
            ">üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å</button>
        </div>
    `;
}

// –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ Telegram
function showTelegramNotification(message, isSuccess = true) {
    tg.showPopup({
        title: isSuccess ? '‚úÖ –£—Å–ø–µ—Ö' : '‚ùå –û—à–∏–±–∫–∞',
        message: message,
        buttons: [{ type: 'ok' }]
    });
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
async function initApp() {
    try {
        console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...');
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram Web App
        tg.ready();
        tg.BackButton.hide();
        tg.expand();
        tg.enableClosingConfirmation();

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
        statusElement.innerHTML = '<div class="loading">üîê –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è...</div>';

        // –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –≤ Firebase
        const firebaseUser = await authenticateAnonymously();
        
        // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Telegram
        statusElement.innerHTML = '<div class="loading">üì° –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö Telegram...</div>';
        const userData = getTelegramUserData();
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ
        statusElement.innerHTML = '<div class="loading">üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö...</div>';
        await saveUserData(userData);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        updateUI(userData, firebaseUser);
        
        console.log('üéØ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ');
        
    } catch (error) {
        handleError(error);
    }
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
saveBtn.addEventListener('click', async () => {
    try {
        tg.showPopup({
            title: '‚è≥',
            message: '–û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ...'
        });

        const userData = getTelegramUserData();
        await saveUserData(userData);
        
        showTelegramNotification('–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã –≤ –±–∞–∑–µ!');
        
        // –û–±–Ω–æ–≤–ª—è–µ–º UI
        const firebaseUser = auth.currentUser;
        updateUI(userData, firebaseUser);
        
    } catch (error) {
        showTelegramNotification('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏: ' + error.message, false);
    }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
refreshBtn.addEventListener('click', () => {
    location.reload();
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
auth.onAuthStateChanged((user) => {
    if (user) {
        console.log('üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω:', user.uid);
    } else {
        console.log('üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã—à–µ–ª –∏–∑ —Å–∏—Å—Ç–µ–º—ã');
    }
});

// –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
document.addEventListener('DOMContentLoaded', () => {
    console.log('üìÑ DOM –∑–∞–≥—Ä—É–∂–µ–Ω, –∑–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ...');
    initApp();
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
window.addEventListener('error', (event) => {
    console.error('üö® –ì–ª–æ–±–∞–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞:', event.error);
    handleError(event.error);
});
